From e909b7569d7914f38bb630a216249259cb153ba6 Mon Sep 17 00:00:00 2001
From: liuyujielol <2073201758GD@gmail.com>
Date: Sun, 5 Nov 2023 12:38:03 +0800
Subject: [PATCH] fix set_position and add seeked() signal for mpris-player

Signed-off-by: liuyujielol <2073201758GD@gmail.com>
---
 Cargo.toml                 |  2 +-
 src/audio/mpris.rs         |  5 +++--
 src/audio/playlist.rs      |  2 +-
 src/gui/player_controls.rs | 18 +++++-------------
 src/gui/playlist_lyrics.rs | 15 +++++----------
 5 files changed, 15 insertions(+), 27 deletions(-)

diff --git a/Cargo.toml b/Cargo.toml
index 05288f4..cd7f344 100644
--- a/Cargo.toml
+++ b/Cargo.toml
@@ -14,7 +14,7 @@ anyhow = "~1.0"
 gstreamer = "~0.21"
 gstreamer-play = "~0.21"
 fastrand = "~1.9"
-mpris-player = "~0.6.2"
+mpris-player2 = "~0.6.1"
 regex = "~1.7"
 log = "~0.4"
 env_logger = "~0.10"
diff --git a/src/audio/mpris.rs b/src/audio/mpris.rs
index ae3973f..518f86e 100644
--- a/src/audio/mpris.rs
+++ b/src/audio/mpris.rs
@@ -7,7 +7,7 @@
 use adw::prelude::GtkWindowExt;
 use glib::clone;
 use gtk::glib;
-use mpris_player::*;
+use mpris_player2::*;
 
 use ncm_api::SongInfo;
 use std::sync::Arc;
@@ -30,7 +30,7 @@ impl MprisController {
     pub fn new() -> Self {
         let mpris = MprisPlayer::new(
             crate::MPRIS_NAME.to_string(),
-            gettextrs::gettext(crate::APP_NAME),
+            crate::MPRIS_NAME.to_string(),
             crate::APP_ID.to_string(),
         );
         mpris.set_can_raise(true);
@@ -45,6 +45,7 @@ impl MprisController {
 
     pub fn update_metadata(&self, si: &SongInfo, microseconds: i64) {
         let mut metadata = Metadata::new();
+        metadata.track_id = Some(format!("/netease/{}", si.id));
         metadata.artist = Some(vec![si.singer.clone()]);
         metadata.title = Some(si.name.clone());
         metadata.length = Some(microseconds);
diff --git a/src/audio/playlist.rs b/src/audio/playlist.rs
index 75bc97a..362a23c 100644
--- a/src/audio/playlist.rs
+++ b/src/audio/playlist.rs
@@ -5,7 +5,7 @@
 //
 
 use gtk::glib;
-use mpris_player::LoopStatus;
+use mpris_player2::LoopStatus;
 use ncm_api::SongInfo;
 
 #[derive(Debug)]
diff --git a/src/gui/player_controls.rs b/src/gui/player_controls.rs
index 5a105dd..8a22b0f 100644
--- a/src/gui/player_controls.rs
+++ b/src/gui/player_controls.rs
@@ -12,7 +12,7 @@ use glib::{
 use gst::{prelude::ObjectExt, ClockTime};
 use gstreamer_play::{prelude::ElementExt, *};
 use gtk::{glib, prelude::*, subclass::prelude::*, CompositeTemplate, *};
-use mpris_player::PlaybackStatus;
+use mpris_player2::PlaybackStatus;
 use ncm_api::{SongInfo, SongList};
 use once_cell::sync::*;
 
@@ -246,12 +246,7 @@ impl PlayerControls {
         let duration = format!("{:0>2}:{:0>2}", sec / 60, sec % 60);
         let seek_scale = imp.seek_scale.get();
 
-        /*
-         *  the api of mpris is broken on set_position
-         *  set_position should not emitted PropertiesChanged, but it does
-         *  so, disable the set_position and don't update metadata's length
-         */
-        // imp.mpris.get().unwrap().set_position(msec as i64);
+        imp.mpris.get().unwrap().set_position(msec as i64);
 
         seek_scale.set_value(msec as f64);
         imp.progress_time_label.get().set_label(&duration);
@@ -268,12 +263,9 @@ impl PlayerControls {
 
         self.set_property("duration", sec);
 
-        /*
-         * not update_metadata length
-         */
-        // if let Some(si) = self.get_current_song() {
-        //     imp.mpris.get().unwrap().update_metadata(&si, msec as i64);
-        // }
+        if let Some(si) = self.get_current_song() {
+            imp.mpris.get().unwrap().update_metadata(&si, msec as i64);
+        }
     }
 
     pub fn gst_state_changed(&self, state: PlayState) {
diff --git a/src/gui/playlist_lyrics.rs b/src/gui/playlist_lyrics.rs
index 05ab2da..5384f24 100644
--- a/src/gui/playlist_lyrics.rs
+++ b/src/gui/playlist_lyrics.rs
@@ -63,16 +63,11 @@ impl PlayListLyricsPage {
         songs_list.set_sender(sender.clone());
         songs_list.init_new_list(sis, likes);
 
-        let i: i32 = {
-            let mut i: i32 = 0;
-            match sis.iter().find(|si| {
-                i += 1;
-                si.id == current_song.id
-            }) {
-                Some(_) => i - 1,
-                _ => -1,
-            }
-        };
+        let i: i32 = sis.iter()
+            .enumerate()
+            .find(|(_, si)| si.id == current_song.id)
+            .map(|(idx, _)| idx as _)
+            .unwrap_or(-1);
         self.switch_row(i);
     }
 
-- 
2.42.1

