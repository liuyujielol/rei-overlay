---
 Cargo.toml                      | 16 ++++----
 src/application.rs              |  9 +++--
 src/audio/playlist.rs           |  9 +----
 src/gui/discover.rs             |  4 +-
 src/gui/my_page.rs              |  2 +-
 src/gui/player_controls.rs      | 31 ++++++++--------
 src/gui/playlist_lyrics.rs      |  2 +-
 src/gui/preferences.rs          |  2 +-
 src/gui/search_singer_page.rs   | 49 +++----------------------
 src/gui/search_song_page.rs     | 65 ++++-----------------------------
 src/gui/search_songlist_page.rs |  4 +-
 src/gui/songlist_grid_item.rs   |  2 +-
 src/gui/songlist_page.rs        |  2 +-
 src/gui/songlist_row.rs         |  2 +-
 src/gui/theme_selector.rs       |  2 +-
 src/gui/toplist.rs              |  2 +-
 src/main.rs                     |  2 +-
 src/model.rs                    | 19 ++--------
 src/ncmapi.rs                   |  2 +-
 src/window.rs                   | 13 ++++---
 20 files changed, 71 insertions(+), 168 deletions(-)

diff --git a/Cargo.toml b/Cargo.toml
index 8d8d6dc..2089369 100644
--- a/Cargo.toml
+++ b/Cargo.toml
@@ -5,22 +5,22 @@ edition = "2021"
 
 [dependencies]
 gettext-rs = { version = "~0.7", features = ["gettext-system"] }
-gtk = { version = "~0.5", package = "gtk4" }
-once_cell = "~1.16"
+gtk = { version = "~0.6", package = "gtk4" }
+once_cell = "~1.17"
 qrcode-generator = "~4.1"
 # ncm-api = { git = "https://github.com/gmg137/netease-cloud-music-api.git", branch = "dev", package = "netease-cloud-music-api" }
 ncm-api = { git = "https://github.com/gmg137/netease-cloud-music-api.git", tag = "1.2.0", package = "netease-cloud-music-api" }
 anyhow = "~1.0"
-gstreamer = "~0.19"
-gstreamer-play = "~0.19"
-fastrand = "~1.8"
+gstreamer = "~0.20"
+gstreamer-play = "~0.20"
+fastrand = "~1.9"
 mpris-player = "~0.6.2"
 regex = "~1.7"
 log = "~0.4"
-env_logger = "~0.9"
+env_logger = "~0.10"
 cookie_store = "~0.19"
-chrono = "~0.4.23"
+chrono = "~0.4"
 
 [dependencies.adw]
 package = "libadwaita"
-version = "~0.2"
+version = "~0.3"
diff --git a/src/application.rs b/src/application.rs
index 3fe5dc9..5191255 100644
--- a/src/application.rs
+++ b/src/application.rs
@@ -205,7 +205,10 @@ glib::wrapper! {
 
 impl NeteaseCloudMusicGtk4Application {
     pub fn new(application_id: &str, flags: &gio::ApplicationFlags) -> Self {
-        glib::Object::new(&[("application-id", &application_id), ("flags", flags)])
+        glib::Object::builder()
+            .property("application-id", &application_id)
+            .property("flags", flags)
+            .build()
     }
 
     fn create_window(&self) -> NeteaseCloudMusicGtk4Window {
@@ -1133,10 +1136,10 @@ impl NeteaseCloudMusicGtk4Application {
         let dialog = gtk::AboutDialog::builder()
             .transient_for(&window)
             .modal(true)
-            .program_name(&gettext(crate::APP_NAME))
+            .program_name(gettext(crate::APP_NAME))
             .logo_icon_name("logo")
             .version(VERSION)
-            .authors(vec!["gmg137".into(), "catsout".into()])
+            .authors(vec!["gmg137", "catsout"])
             .website("https://github.com/gmg137/netease-cloud-music-gtk")
             .license_type(gtk::License::Gpl30)
             .build();
diff --git a/src/audio/playlist.rs b/src/audio/playlist.rs
index 5cfe13e..75bc97a 100644
--- a/src/audio/playlist.rs
+++ b/src/audio/playlist.rs
@@ -215,7 +215,7 @@ impl PlayList {
 }
 
 #[allow(clippy::upper_case_acronyms)]
-#[derive(Debug, PartialEq, Eq, Clone, Copy, glib::Enum)]
+#[derive(Debug, Default, PartialEq, Eq, Clone, Copy, glib::Enum)]
 #[enum_type(name = "LoopsState")]
 pub enum LoopsState {
     // 随机
@@ -225,6 +225,7 @@ pub enum LoopsState {
     // 单曲循环
     ONE,
     // 不循环
+    #[default]
     NONE,
 }
 
@@ -240,12 +241,6 @@ impl LoopsState {
     }
 }
 
-impl Default for LoopsState {
-    fn default() -> LoopsState {
-        LoopsState::NONE
-    }
-}
-
 impl From<LoopStatus> for LoopsState {
     fn from(status: LoopStatus) -> Self {
         match status {
diff --git a/src/gui/discover.rs b/src/gui/discover.rs
index 3d43951..a54851e 100644
--- a/src/gui/discover.rs
+++ b/src/gui/discover.rs
@@ -18,7 +18,7 @@ glib::wrapper! {
 
 impl Discover {
     pub fn new() -> Self {
-        let discover: Discover = glib::Object::new(&[]);
+        let discover: Discover = glib::Object::new();
         discover
     }
 
@@ -178,7 +178,7 @@ mod imp {
         #[template_callback]
         fn carousel_pressed_cb(&self) {
             let position = self.carousel.position();
-            if let Some(banner) = self.banners.borrow().get((position as f64) as usize) {
+            if let Some(banner) = self.banners.borrow().get(position as usize) {
                 let song_info = SongInfo {
                     id: banner.id.to_owned(),
                     name: banner.name.to_owned(),
diff --git a/src/gui/my_page.rs b/src/gui/my_page.rs
index 114a824..cadb51b 100644
--- a/src/gui/my_page.rs
+++ b/src/gui/my_page.rs
@@ -19,7 +19,7 @@ glib::wrapper! {
 
 impl MyPage {
     pub fn new() -> Self {
-        glib::Object::new(&[])
+        glib::Object::new()
     }
 
     pub fn set_sender(&self, sender: Sender<Action>) {
diff --git a/src/gui/player_controls.rs b/src/gui/player_controls.rs
index 323bedc..70cbc79 100644
--- a/src/gui/player_controls.rs
+++ b/src/gui/player_controls.rs
@@ -32,7 +32,7 @@ glib::wrapper! {
 
 impl PlayerControls {
     pub fn new() -> Self {
-        let player_controls: PlayerControls = glib::Object::new(&[]);
+        let player_controls: PlayerControls = glib::Object::new();
         player_controls
     }
 
@@ -78,7 +78,7 @@ impl PlayerControls {
 
     pub fn setup_player(&self) {
         let imp = self.imp();
-        let player = Play::new(PlayVideoRenderer::NONE);
+        let player = Play::new(None::<PlayVideoRenderer>);
         let player_signal = PlaySignalAdapter::new(&player);
         let mut config = player.config();
         config.set_user_agent(
@@ -179,9 +179,10 @@ impl PlayerControls {
             use gst::MessageView;
             if let MessageView::Element(ele) = msg.view() {
                 if let Some(stu) = ele.structure() {
-                    if let "GstCacheDownloadComplete" = stu.name() {
-                        let loc = stu.get::<String>("location").unwrap();
-                        sender.send(Action::GstCacheDownloadComplete(loc)).unwrap();
+                    if "GstCacheDownloadComplete" == stu.name() {
+                        if let Ok(loc) = stu.get::<String>("location") {
+                            sender.send(Action::GstCacheDownloadComplete(loc)).unwrap();
+                        }
                     }
                 }
             }
@@ -309,30 +310,30 @@ impl PlayerControls {
         let controller = ShortcutController::new();
         let trigger = ShortcutTrigger::parse_string("<primary>space").unwrap();
         let action = ActivateAction::get();
-        let shortcut = Shortcut::new(Some(&trigger), Some(&action));
-        controller.add_shortcut(&shortcut);
+        let shortcut = Shortcut::new(Some(trigger), Some(action));
+        controller.add_shortcut(shortcut);
         controller.set_scope(ShortcutScope::Global);
-        play_button.add_controller(&controller);
+        play_button.add_controller(controller);
 
         // 上一曲按钮
         let prev_button = self.imp().prev_button.get();
         let controller = ShortcutController::new();
         let trigger = ShortcutTrigger::parse_string("<primary>b").unwrap();
         let action = ActivateAction::get();
-        let shortcut = Shortcut::new(Some(&trigger), Some(&action));
-        controller.add_shortcut(&shortcut);
+        let shortcut = Shortcut::new(Some(trigger), Some(action));
+        controller.add_shortcut(shortcut);
         controller.set_scope(ShortcutScope::Global);
-        prev_button.add_controller(&controller);
+        prev_button.add_controller(controller);
 
         // 下一曲按钮
         let next_button = self.imp().next_button.get();
         let controller = ShortcutController::new();
         let trigger = ShortcutTrigger::parse_string("<primary>n").unwrap();
         let action = ActivateAction::get();
-        let shortcut = Shortcut::new(Some(&trigger), Some(&action));
-        controller.add_shortcut(&shortcut);
+        let shortcut = Shortcut::new(Some(trigger), Some(action));
+        controller.add_shortcut(shortcut);
         controller.set_scope(ShortcutScope::Global);
-        next_button.add_controller(&controller);
+        next_button.add_controller(controller);
     }
 
     pub fn add_song(&self, song: SongInfo) {
@@ -778,7 +779,7 @@ mod imp {
             static PROPERTIES: Lazy<Vec<ParamSpec>> = Lazy::new(|| {
                 vec![
                     ParamSpecDouble::builder("volume").build(),
-                    ParamSpecEnum::builder("loops", LoopsState::default()).build(),
+                    ParamSpecEnum::builder::<LoopsState>("loops").build(),
                     ParamSpecUInt::builder("music-rate").build(),
                     ParamSpecUInt64::builder("duration").build(),
                     ParamSpecBoolean::builder("like").readwrite().build(),
diff --git a/src/gui/playlist_lyrics.rs b/src/gui/playlist_lyrics.rs
index 255aa7f..05ab2da 100644
--- a/src/gui/playlist_lyrics.rs
+++ b/src/gui/playlist_lyrics.rs
@@ -24,7 +24,7 @@ glib::wrapper! {
 
 impl PlayListLyricsPage {
     pub fn new() -> Self {
-        glib::Object::new(&[])
+        glib::Object::new()
     }
 
     pub fn set_sender(&self, sender_: Sender<Action>) {
diff --git a/src/gui/preferences.rs b/src/gui/preferences.rs
index 6727d90..0dcf0bd 100644
--- a/src/gui/preferences.rs
+++ b/src/gui/preferences.rs
@@ -18,7 +18,7 @@ glib::wrapper! {
 
 impl NeteaseCloudMusicGtk4Preferences {
     pub fn new() -> Self {
-        glib::Object::new(&[])
+        glib::Object::new()
     }
 
     fn setup_settings(&self) {
diff --git a/src/gui/search_singer_page.rs b/src/gui/search_singer_page.rs
index d61feea..b9b76ad 100644
--- a/src/gui/search_singer_page.rs
+++ b/src/gui/search_singer_page.rs
@@ -4,7 +4,7 @@
 // Distributed under terms of the GPL-3.0-or-later license.
 //
 use glib::Sender;
-use glib::{ParamFlags, ParamSpec, ParamSpecBoolean, ParamSpecInt, ParamSpecString, Value};
+use glib::{ParamSpec, ParamSpecBoolean, ParamSpecInt, ParamSpecString, Value};
 pub(crate) use gtk::{glib, prelude::*, subclass::prelude::*, CompositeTemplate, *};
 use ncm_api::SingerInfo;
 use once_cell::sync::{Lazy, OnceCell};
@@ -25,7 +25,7 @@ glib::wrapper! {
 
 impl SearchSingerPage {
     pub fn new() -> Self {
-        glib::Object::new(&[])
+        glib::Object::new()
     }
 
     pub fn set_sender(&self, sender: Sender<Action>) {
@@ -89,11 +89,11 @@ impl SearchSingerPage {
                 row += 1;
             }
             let gesture_click = GestureClick::new();
-            avatar.add_controller(&gesture_click);
             let sender = sender.clone();
             gesture_click.connect_pressed(move |_, _, _, _| {
                 sender.send(Action::ToSingerSongsPage(si.clone())).unwrap();
             });
+            avatar.add_controller(gesture_click);
         }
         self.set_property("offset", offset + singer_len as i32);
     }
@@ -142,46 +142,9 @@ mod imp {
         fn properties() -> &'static [ParamSpec] {
             static PROPERTIES: Lazy<Vec<ParamSpec>> = Lazy::new(|| {
                 vec![
-                    ParamSpecBoolean::new(
-                        // Name
-                        "update",
-                        // Nickname
-                        "update",
-                        // Short description
-                        "Used to determine if the page is updated when scrolling to the bottom.",
-                        // Default value
-                        false,
-                        // The property can be read and written to
-                        ParamFlags::READWRITE,
-                    ),
-                    ParamSpecInt::new(
-                        // Name
-                        "offset",
-                        // Nickname
-                        "offset",
-                        // Short description
-                        "offset",
-                        // Minimum value
-                        i32::MIN,
-                        // Maximum value
-                        i32::MAX,
-                        // Default value
-                        0,
-                        // The property can be read and written to
-                        ParamFlags::READWRITE,
-                    ),
-                    ParamSpecString::new(
-                        // Name
-                        "keyword",
-                        // Nickname
-                        "keyword",
-                        // Short description
-                        "Search keyword",
-                        // Default value
-                        None,
-                        // The property can be read and written to
-                        ParamFlags::READWRITE,
-                    ),
+                    ParamSpecBoolean::builder("update").build(),
+                    ParamSpecInt::builder("offset").build(),
+                    ParamSpecString::builder("keyword").build(),
                 ]
             });
             PROPERTIES.as_ref()
diff --git a/src/gui/search_song_page.rs b/src/gui/search_song_page.rs
index daf7808..d7d1bf8 100644
--- a/src/gui/search_song_page.rs
+++ b/src/gui/search_song_page.rs
@@ -5,8 +5,7 @@
 //
 use glib::Sender;
 use glib::{
-    clone, ParamFlags, ParamSpec, ParamSpecBoolean, ParamSpecEnum, ParamSpecInt, ParamSpecString,
-    Value,
+    clone, ParamSpec, ParamSpecBoolean, ParamSpecEnum, ParamSpecInt, ParamSpecString, Value,
 };
 pub(crate) use gtk::{glib, prelude::*, subclass::prelude::*, CompositeTemplate, *};
 use ncm_api::SongInfo;
@@ -30,7 +29,7 @@ glib::wrapper! {
 
 impl SearchSongPage {
     pub fn new() -> Self {
-        glib::Object::new(&[])
+        glib::Object::new()
     }
 
     pub fn set_sender(&self, sender: Sender<Action>) {
@@ -149,60 +148,12 @@ mod imp {
         fn properties() -> &'static [ParamSpec] {
             static PROPERTIES: Lazy<Vec<ParamSpec>> = Lazy::new(|| {
                 vec![
-                    ParamSpecBoolean::new(
-                        // Name
-                        "update",
-                        // Nickname
-                        "update",
-                        // Short description
-                        "Used to determine if the page is updated when scrolling to the bottom.",
-                        // Default value
-                        false,
-                        // The property can be read and written to
-                        ParamFlags::READWRITE,
-                    ),
-                    ParamSpecInt::new(
-                        // Name
-                        "offset",
-                        // Nickname
-                        "offset",
-                        // Short description
-                        "offset",
-                        // Minimum value
-                        i32::MIN,
-                        // Maximum value
-                        i32::MAX,
-                        // Default value
-                        0,
-                        // The property can be read and written to
-                        ParamFlags::READWRITE,
-                    ),
-                    ParamSpecString::new(
-                        // Name
-                        "keyword",
-                        // Nickname
-                        "keyword",
-                        // Short description
-                        "Search keyword",
-                        // Default value
-                        None,
-                        // The property can be read and written to
-                        ParamFlags::READWRITE,
-                    ),
-                    ParamSpecEnum::new(
-                        // Name
-                        "search-type",
-                        // Nickname
-                        "search-type",
-                        // Short description
-                        "search type",
-                        // Enum type
-                        SearchType::static_type(),
-                        // Default value
-                        SearchType::default() as i32,
-                        // The property can be read and written to
-                        ParamFlags::READWRITE | glib::ParamFlags::EXPLICIT_NOTIFY,
-                    ),
+                    ParamSpecBoolean::builder("update").build(),
+                    ParamSpecInt::builder("offset").build(),
+                    ParamSpecString::builder("keyword").build(),
+                    ParamSpecEnum::builder::<SearchType>("search-type")
+                        .explicit_notify()
+                        .build(),
                 ]
             });
             PROPERTIES.as_ref()
diff --git a/src/gui/search_songlist_page.rs b/src/gui/search_songlist_page.rs
index d1b7b86..5a86945 100644
--- a/src/gui/search_songlist_page.rs
+++ b/src/gui/search_songlist_page.rs
@@ -25,7 +25,7 @@ glib::wrapper! {
 
 impl SearchSongListPage {
     pub fn new() -> Self {
-        glib::Object::new(&[])
+        glib::Object::new()
     }
 
     pub fn set_sender(&self, sender: Sender<Action>) {
@@ -116,7 +116,7 @@ mod imp {
                     ParamSpecString::builder("keyword")
                         .default_value(None)
                         .build(),
-                    ParamSpecEnum::builder("search-type", SearchType::default())
+                    ParamSpecEnum::builder::<SearchType>("search-type")
                         .explicit_notify()
                         .build(),
                 ]
diff --git a/src/gui/songlist_grid_item.rs b/src/gui/songlist_grid_item.rs
index edbbf0c..46a2497 100644
--- a/src/gui/songlist_grid_item.rs
+++ b/src/gui/songlist_grid_item.rs
@@ -210,7 +210,7 @@ impl SongListGridItem {
         } else {
             let model = gio::ListStore::new(SongListGridItem::static_type());
             model.extend_from_slice(&objs);
-            let select = NoSelection::new(Some(&model));
+            let select = NoSelection::new(Some(model));
             grid.set_model(Some(&select));
         }
     }
diff --git a/src/gui/songlist_page.rs b/src/gui/songlist_page.rs
index f4118a9..677c2f3 100644
--- a/src/gui/songlist_page.rs
+++ b/src/gui/songlist_page.rs
@@ -30,7 +30,7 @@ glib::wrapper! {
 
 impl SonglistPage {
     pub fn new() -> Self {
-        let songlist_page: SonglistPage = glib::Object::new(&[]);
+        let songlist_page: SonglistPage = glib::Object::new();
         songlist_page
     }
 
diff --git a/src/gui/songlist_row.rs b/src/gui/songlist_row.rs
index f1d7823..e5ef499 100644
--- a/src/gui/songlist_row.rs
+++ b/src/gui/songlist_row.rs
@@ -24,7 +24,7 @@ glib::wrapper! {
 
 impl SonglistRow {
     pub fn new(sender: Sender<Action>, si: &SongInfo) -> Self {
-        let obj: Self = glib::Object::new(&[]);
+        let obj: Self = glib::Object::new();
         let imp = obj.imp();
         if imp.sender.get().is_none() {
             imp.sender.set(sender).unwrap();
diff --git a/src/gui/theme_selector.rs b/src/gui/theme_selector.rs
index 6a5eb24..98c5f5b 100644
--- a/src/gui/theme_selector.rs
+++ b/src/gui/theme_selector.rs
@@ -21,7 +21,7 @@ impl Default for ThemeSelector {
 
 impl ThemeSelector {
     pub fn new() -> Self {
-        glib::Object::new(&[])
+        glib::Object::new()
     }
 }
 
diff --git a/src/gui/toplist.rs b/src/gui/toplist.rs
index 4bfd36d..298a9b4 100644
--- a/src/gui/toplist.rs
+++ b/src/gui/toplist.rs
@@ -28,7 +28,7 @@ impl Default for TopListView {
 
 impl TopListView {
     pub fn new() -> Self {
-        glib::Object::new(&[])
+        glib::Object::new()
     }
 
     pub fn set_sender(&self, sender: Sender<Action>) {
diff --git a/src/main.rs b/src/main.rs
index d238a39..d54764c 100644
--- a/src/main.rs
+++ b/src/main.rs
@@ -56,5 +56,5 @@ fn main() {
     // exits. Upon return, we have our exit code to return to the shell. (This
     // is the code you see when you do `echo $?` after running a command in a
     // terminal.
-    std::process::exit(app.run());
+    std::process::exit(app.run().into());
 }
diff --git a/src/model.rs b/src/model.rs
index 1538753..97762e3 100644
--- a/src/model.rs
+++ b/src/model.rs
@@ -29,7 +29,6 @@ impl PageStack {
         let pages: Vec<gtk::StackPage> = gtk_stack
             .pages()
             .iter::<gtk::StackPage>()
-            .unwrap()
             .map(|p| p.unwrap())
             .collect();
         PageStack {
@@ -129,8 +128,9 @@ impl PageStack {
     }
 }
 
-#[derive(Debug, Clone, Copy, Eq, PartialEq)]
+#[derive(Debug, Default, Clone, Copy, Eq, PartialEq)]
 pub enum UserMenuChild {
+    #[default]
     Qr,
     Phone,
     User,
@@ -157,10 +157,11 @@ impl SongListDetail {
     }
 }
 
-#[derive(Debug, Clone, Copy, Eq, PartialEq, glib::Enum)]
+#[derive(Debug, Default, Clone, Copy, Eq, PartialEq, glib::Enum)]
 #[repr(i32)]
 #[enum_type(name = "SearchType")]
 pub enum SearchType {
+    #[default]
     // 搜索歌曲
     Song,
     // 搜索歌手
@@ -198,18 +199,6 @@ pub enum SearchResult {
     SongLists(Vec<SongList>),
 }
 
-impl Default for SearchType {
-    fn default() -> Self {
-        SearchType::Song
-    }
-}
-
-impl Default for UserMenuChild {
-    fn default() -> Self {
-        UserMenuChild::Qr
-    }
-}
-
 pub trait ImageDownloadImpl {
     // 参数
     // url: 图片链接
diff --git a/src/ncmapi.rs b/src/ncmapi.rs
index 54d45a2..10f17c7 100644
--- a/src/ncmapi.rs
+++ b/src/ncmapi.rs
@@ -144,7 +144,7 @@ impl NcmClient {
     }
 
     pub fn clean_cookie_file() {
-        if let Err(err) = fs::remove_file(&crate::path::DATA.clone().join(COOKIE_FILE)) {
+        if let Err(err) = fs::remove_file(crate::path::DATA.clone().join(COOKIE_FILE)) {
             match err.kind() {
                 io::ErrorKind::NotFound => (),
                 other => error!("{:?}", other),
diff --git a/src/window.rs b/src/window.rs
index 45cd86a..b57ce6a 100644
--- a/src/window.rs
+++ b/src/window.rs
@@ -141,7 +141,7 @@ mod imp {
         fn properties() -> &'static [ParamSpec] {
             static PROPERTIES: Lazy<Vec<ParamSpec>> = Lazy::new(|| {
                 vec![
-                    ParamSpecEnum::builder("search-type", SearchType::default())
+                    ParamSpecEnum::builder::<SearchType>("search-type")
                         .explicit_notify()
                         .build(),
                     ParamSpecObject::builder::<Toast>("toast").build(),
@@ -193,8 +193,9 @@ glib::wrapper! {
 
 impl NeteaseCloudMusicGtk4Window {
     pub fn new<P: glib::IsA<gtk::Application>>(application: &P, sender: Sender<Action>) -> Self {
-        let window: NeteaseCloudMusicGtk4Window =
-            glib::Object::new(&[("application", application)]);
+        let window: NeteaseCloudMusicGtk4Window = glib::Object::builder()
+            .property("application", application)
+            .build();
 
         window.imp().sender.set(sender).unwrap();
         window.setup_widget();
@@ -403,11 +404,11 @@ impl NeteaseCloudMusicGtk4Window {
         let pre = self.property::<Toast>("toast");
 
         let toast = Toast::builder()
-            .title(&mes)
+            .title(mes)
             .priority(adw::ToastPriority::High)
             .build();
-        self.imp().toast_overlay.add_toast(&toast);
-        self.set_property("toast", toast);
+        self.set_property("toast", &toast);
+        self.imp().toast_overlay.add_toast(toast);
 
         // seems that dismiss will clear something used by animation
         // cause adw_animation_skip emit 'done' segfault on closure(https://github.com/gmg137/netease-cloud-music-gtk/issues/202)
-- 
2.42.0

